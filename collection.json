{
  "info": {
    "_postman_id": "db178bda-4eae-4c85-a653-c865c50b09c0",
    "name": "wetter.vorchdorf.media",
    "description": "GraphQL API endpoints for wetter.vorchdorf.media",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Queries",
      "item": [
        {
          "name": "entry",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query entry($station: ID!) {\n    entry(station: $station) {\n        id\n        hash\n        timestamp\n        temperature\n        temperature2\n        humidity\n        feels\n        createdAt\n        updatedAt\n        station {\n            name\n            email\n            createdAt\n            updatedAt\n            address {\n                city\n                country\n                street\n                zip\n            }\n            coordinates {\n                height\n                latitude\n                longitude\n            }\n            config {\n                temperature\n                temperature2\n            }\n        }\n    }\n}",
                "variables": "{\n    \"station\": \"{{STATION_NAME}}\"\n}"
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Returns latest entry of specified station"
          },
          "response": []
        },
        {
          "name": "entryExtreme",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query entryExtreme($low: Boolean, $station: ID, $from: String, $to: String) {\n    entryExtreme(low: $low, station: $station, from: $from, to: $to) {\n        id\n        hash\n        timestamp\n        temperature\n        temperature2\n        humidity\n        feels\n        createdAt\n        updatedAt\n        station {\n            name\n            email\n            createdAt\n            updatedAt\n            address {\n                city\n                country\n                street\n                zip\n            }\n            coordinates {\n                height\n                latitude\n                longitude\n            }\n            config {\n                temperature\n                temperature2\n            }\n        }\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Returns the entry containing the most extreme temperature value (low: true for negative extreme)"
          },
          "response": []
        },
        {
          "name": "entries",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query entries($station: ID!, $from: String!, $to: String) {\n    entries(station: $station, from: $from, to: $to) {\n        id\n        hash\n        timestamp\n        temperature\n        temperature2\n        humidity\n        feels\n        createdAt\n        updatedAt\n        station {\n            name\n            email\n            createdAt\n            updatedAt\n            address {\n                city\n                country\n                street\n                zip\n            }\n            coordinates {\n                height\n                latitude\n                longitude\n            }\n            config {\n                temperature\n                temperature2\n            }\n        }\n    }\n}",
                "variables": "{\n    \"station\": \"{{STATION_NAME}}\",\n    \"from\": \"2020-12-29\"\n}"
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Returns entries within a given timespan for a certain station"
          },
          "response": []
        },
        {
          "name": "entriesCount",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query entriesCount($station: ID, $from: String, $to: String) {\n    entriesCount(station: $station, from: $from, to: $to)\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Returns the number of recorded entries based on given variables"
          },
          "response": []
        },
        {
          "name": "station",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query station($name: ID!) {\n    station(name: $name) {\n        name\n        email\n        createdAt\n        updatedAt\n        address {\n            city\n            country\n            street\n            zip\n        }\n        coordinates {\n            height\n            latitude\n            longitude\n        }\n        config {\n            temperature\n            temperature2\n        }\n    }\n}",
                "variables": "{\n    \"name\": \"{{STATION_NAME}}\"\n}"
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Returns single station entry"
          },
          "response": []
        },
        {
          "name": "stations",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query stations($name: String) {\n    stations(name: $name) {\n        name\n        email\n        createdAt\n        updatedAt\n        address {\n            city\n            country\n            street\n            zip\n        }\n        coordinates {\n            height\n            latitude\n            longitude\n        }\n        config {\n            temperature\n            temperature2\n        }\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Retrieves currently registered stations"
          },
          "response": []
        },
        {
          "name": "stationsCount",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query stationsCount {\n    stationsCount\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Returns total number of registered stations"
          },
          "response": []
        }
      ],
      "description": "Collection of queries for wetter.vorchdorf.media's GraphQL API"
    },
    {
      "name": "Mutations",
      "item": [
        {
          "name": "createEntry",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "c8b34a2f7daf21d794560e4dce9ed5f82f5d3acc",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{STATION_ID}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation createEntry($hash: String!, $timestamp: Int!, $temperature: [Float], $humidity: Float, $feels: Float) {\n    createEntry(hash: $hash, timestamp: $timestamp, temperature: $temperature, humidity: $humidity, feels: $feels) {\n        id\n        hash\n        timestamp\n        temperature\n        temperature2\n        humidity\n        feels\n        createdAt\n        updatedAt\n        station {\n            name\n            email\n            createdAt\n            updatedAt\n            address {\n                city\n                country\n                street\n                zip\n            }\n            coordinates {\n                height\n                latitude\n                longitude\n            }\n            config {\n                temperature\n                temperature2\n            }\n        }\n    }\n}",
                "variables": "{\n    \"hash\": \"c8b34a2f7daf21d794560e4dce9ed5f82f5d3acc\",\n    \"timestamp\": 1624342714,\n    \"temperature\": [22.7, 22.53],\n    \"humidity\": 60.0,\n    \"feels\": 22.61\n}"
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Creates a new temperature entry for the given station"
          },
          "response": []
        },
        {
          "name": "createStation",
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{ADMIN_PASSWORD}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{ADMIN_USER}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation createStation($station: StationInput!) {\n    createStation(station: $station) {\n        name\n        email\n        createdAt\n        updatedAt\n        address {\n            city\n            country\n            street\n            zip\n        }\n        coordinates {\n            height\n            latitude\n            longitude\n        }\n        config {\n            temperature\n            temperature2\n        }\n    }\n}",
                "variables": "{\n    \"station\": {\n        \"name\": \"\",\n        \"email\": \"\",\n        \"address\": {\n            \"city\": \"\",\n            \"country\": \"\",\n            \"street\": \"\",\n            \"zip\": \"\"\n        },\n        \"coordinates\": {\n            \"height\": 0,\n            \"latitude\": 0,\n            \"longitude\": 0\n        },\n        \"config\": {\n            \"temperature\": \"OUT\",\n            \"temperature2\": \"OUT\"\n        }\n    }\n}"
              }
            },
            "url": {
              "raw": "{{URL}}",
              "host": ["{{URL}}"]
            },
            "description": "Creates a new station"
          },
          "response": []
        }
      ],
      "description": "Collection of mutations for wetter.vorchdorf.media's GraphQL API"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "URL",
      "value": "https://wetter.vorchdorf.media/api/graphql"
    },
    {
      "key": "ADMIN_USER",
      "value": ""
    },
    {
      "key": "ADMIN_PASSWORD",
      "value": ""
    },
    {
      "key": "STATION_NAME",
      "value": ""
    },
    {
      "key": "STATION_ID",
      "value": ""
    }
  ]
}
